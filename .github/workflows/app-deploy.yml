name: Deploy App

on:
  push: 
    branches:
      - main


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS OIDC authentication
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-south-1

      - name: Install Dependencies
        run: |
          cd app
          npm install

      - name: Zip Lambda Function
        run: |
          cd app
          zip -r ../lambda.zip .
          cd ..

      - name: Check if Lambda Function Exists
        id: check_lambda
        continue-on-error: true
        run: |
          aws lambda get-function --function-name hello-world-${{ github.ref_name == 'main' && 'prod' || 'dev' }} > /dev/null 2>&1
          echo "LAMBDA_EXISTS=$?" >> $GITHUB_ENV

      - name: Create Lambda Function (If Not Exists)
        if: env.LAMBDA_EXISTS == '255'  # 255 means function not found
        run: |
          aws lambda create-function \
            --function-name hello-world-${{ github.ref_name == 'main' && 'prod' || 'dev' }} \
            --runtime nodejs18.x \
            --role ${{ secrets.AWS_ROLE_ARN }} \
            --handler index.handler \
            --zip-file fileb://lambda.zip \
            --timeout 10 \
            --memory-size 128 \
            --region ap-south-1

      - name: Update Lambda Function (If Exists)
        if: env.LAMBDA_EXISTS == '0'  # 0 means function exists
        run: |
          aws lambda update-function-code \
            --function-name hello-world-${{ github.ref_name == 'main' && 'prod' || 'dev' }} \
            --zip-file fileb://lambda.zip \
            --region ap-south-1
